- name: disable nodejs
  ansible.builtin.command: dnf module disable nodejs -y
- name:  enable nodejs:20
  ansible.builtin.command: dnf module enable nodejs:20 -y
- name: install nodejs and mysql
  ansible.builtin.dnf:
    name: "{{ item }}"
    state: present
  loop:
  - nodejs
  - mysql
- name: user expense
  ansible.builtin.user:
    name: expense
- name: Recursively remove directory
  ansible.builtin.file:
    path: /app
    state: absent
- name: /app directory 
  ansible.builtin.file:
    path: /app
    state: directory
- name: download source code files
  ansible.builtin.unarchive:
    src: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
    dest: /app/
    remote_src: yes
- name: npm install
  ansible.builtin.command: npm install
  args:
    chdir: /app
- name: copy backend service to /etc/systemd/system/
  ansible.builtin.template:
      src: templates/backend.service.j2
      dest: /etc/systemd/system/backend.service
- name: installing python dependencies for Ansible to interact with MySQL databases
  ansible.builtin.pip:
    name:
    - PyMySQL
    - cryptography
    executable: pip3.9
- name: load mysql schema
  community.mysql.mysql_db:
    login_user: "{{ login_user }}"
    login_password: "{{ db_root_password }}"
    login_host: "{{ login_host }}"
    state: import
    name: all
    target: /app/schema/backend.sql
- name: daemon reload
  ansible.builtin.systemd_service:
    daemon_reload: true
- name:  systemctl enable/start backend
  ansible.builtin.service:
    name: backend
    state: started
    enabled: yes 